//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	__raygen__rg
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 params[32];
.global .align 4 .u32 _ZZN5Eigen8internal21transform_make_affineILi2EE3runINS_6MatrixIfLi4ELi4ELi0ELi4ELi4EEEEEvRT_E3Dim = 3;
.global .align 1 .b8 $str[27] = {116, 101, 115, 116, 58, 32, 105, 110, 100, 101, 120, 58, 32, 37, 56, 100, 32, 45, 62, 32, 37, 53, 46, 51, 102, 10, 0};

.visible .entry __raygen__rg()
{
	.local .align 16 .b8 	__local_depot0[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<82>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<14>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	// begin inline asm
	call (%r2), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r3), _optix_get_launch_index_y, ();
	// end inline asm
	// begin inline asm
	call (%r4), _optix_get_launch_index_z, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_dimension_x, ();
	// end inline asm
	// begin inline asm
	call (%r6), _optix_get_launch_dimension_y, ();
	// end inline asm
	mad.lo.s32 	%r8, %r6, %r4, %r3;
	mad.lo.s32 	%r1, %r8, %r5, %r2;
	ld.const.u32 	%r9, [params+8];
	setp.gt.u32 	%p1, %r1, %r9;
	@%p1 bra 	$L__BB0_2;

	ld.const.u64 	%rd1, [params];
	ld.const.u64 	%rd2, [params+16];
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.u32 	%rd4, %r1, 32;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	ld.global.f32 	%f2, [%rd5+4];
	ld.global.f32 	%f3, [%rd5+8];
	ld.global.f32 	%f4, [%rd5+16];
	ld.global.f32 	%f5, [%rd5+20];
	ld.global.f32 	%f6, [%rd5+24];
	mov.f32 	%f8, 0f5A0E1BCA;
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r43, 255;
	mov.u32 	%r48, 1;
	mov.u32 	%r80, 0;
	// begin inline asm
	call(%r10,%r11,%r12,%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38,%r39,%r40,%r41),_optix_trace_typed_32,(%r80,%rd1,%f1,%f2,%f3,%f4,%f5,%f6,%f9,%f8,%f9,%r43,%r80,%r80,%r48,%r80,%r48,%r49,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80,%r80);
	// end inline asm
	mov.b32 	%f10, %r10;
	cvt.f64.f32 	%fd1, %f10;
	add.u64 	%rd6, %SP, 0;
	add.u64 	%rd7, %SPL, 0;
	st.local.u32 	[%rd7], %r1;
	st.local.f64 	[%rd7+8], %fd1;
	mov.u64 	%rd8, $str;
	cvta.global.u64 	%rd9, %rd8;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r81, [retval0+0];
	} // callseq 0
	ld.const.u64 	%rd10, [params+24];
	cvta.to.global.u64 	%rd11, %rd10;
	mul.wide.u32 	%rd12, %r1, 16;
	add.s64 	%rd13, %rd11, %rd12;
	st.global.u32 	[%rd13], %r10;

$L__BB0_2:
	ret;

}
	// .globl	__miss__ms
.visible .entry __miss__ms()
{



	ret;

}
	// .globl	__closesthit__ch
.visible .entry __closesthit__ch()
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<3>;


	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	mov.b32 	%r2, %f1;
	mov.u32 	%r1, 0;
	// begin inline asm
	call _optix_set_payload, (%r1, %r2);
	// end inline asm
	ret;

}

